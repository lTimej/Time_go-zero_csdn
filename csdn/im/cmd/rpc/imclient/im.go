// Code generated by goctl. DO NOT EDIT.
// Source: im.proto

package imclient

import (
	"context"

	"liujun/Time_go-zero_csdn/csdn/im/cmd/rpc/types/im"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	UserChatRequest         = im.UserChatRequest
	UserChatResponse        = im.UserChatResponse
	UserInfo                = im.UserInfo
	UserMessageListRequest  = im.UserMessageListRequest
	UserMessageListResponse = im.UserMessageListResponse

	Im interface {
		UserMessageList(ctx context.Context, in *UserMessageListRequest, opts ...grpc.CallOption) (*UserMessageListResponse, error)
		UserChat(ctx context.Context, in *UserChatRequest, opts ...grpc.CallOption) (*UserChatResponse, error)
	}

	defaultIm struct {
		cli zrpc.Client
	}
)

func NewIm(cli zrpc.Client) Im {
	return &defaultIm{
		cli: cli,
	}
}

func (m *defaultIm) UserMessageList(ctx context.Context, in *UserMessageListRequest, opts ...grpc.CallOption) (*UserMessageListResponse, error) {
	client := im.NewImClient(m.cli.Conn())
	return client.UserMessageList(ctx, in, opts...)
}

func (m *defaultIm) UserChat(ctx context.Context, in *UserChatRequest, opts ...grpc.CallOption) (*UserChatResponse, error) {
	client := im.NewImClient(m.cli.Conn())
	return client.UserChat(ctx, in, opts...)
}
