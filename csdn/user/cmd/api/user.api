type UserFocusFansList {
	UserId       string `json:"user_id"`
	Flag         string `json:"flag"`
	UserName     string `json:"user_name"`
	HeadPhoto    string `json:"head_photo"`
	Introduction string `json:"introduction"`
	MutualFocus  bool   `json:"mutual_focus"`
}

type UserPasswordLoginRequest {
	UserName string `json:"username"`
	Password string `json:"password"`
}
type UserPasswordLoginResponse {
	Token        string `json:"token"`
	RefreshToken string `json:"refresh_token"`
}
type PhoneLoginRequest {
	Phone string `json:"mobile"`
	Code  string `json:"sms_code"`
}
type PhoneLoginResponse {
	Token        string `json:"token"`
	RefreshToken string `json:"refresh_token"`
}

type SendSmsCodeRequest{}

type SendSmsCodeReponse{}

type UserCurrInfoRequest{}

type UserCurrInfoResponse {
	UserName  string `json:"user_name"`
	HeadPhoto string `json:"head_photo"`
	Introduce string `json:"introduce"`
	CodeYear  int32  `json:"code_year"`
	Career    string `json:"career"`
	Focus     int32  `json:"focus"`
	Fans      int32  `json:"fans"`
	Visitor   int32  `json:"visitor"`
}

type IsFocusUserRequest {
	TargetUserId string `json:"target_user_id,optional"`
}

type IsFocusUserResponse {
	IsFocusUser bool `json:"isFocusUser"`
}

type FocusUserRequest {
	TargetUserId string `json:"target"`
}

type FocusUserResponse {
	TargetUserId string `json:"target_id,optional"`
}

type CancelFocusUserRequest {
	TargetUserId string `json:"target"`
}

type CancelFocusUserResponse {
	Message string `json:"message"`
}

type UserFocusListRequest {
	Page    int64 `json:"page"`
	PageNum int64 `json:"page_num"`
}

type UserFocusListResponse {
	Page     int64                `json:"page"`
	PageNum  int64                `json:"page_num"`
	TotalNum int64                `json:"total_num"`
	Focus    []*UserFocusFansList `json:"focus"`
}

type UserFansListRequest {
	Page    int64 `json:"page"`
	PageNum int64 `json:"page_num"`
}

type UserFansListResponse {
	Page     int64                `json:"page"`
	PageNum  int64                `json:"page_num"`
	TotalNum int64                `json:"total_num"`
	Fans     []*UserFocusFansList `json:"fans"`
}

service api-api {
	@handler UserPasswordLogin
	post /v1/user/login(UserPasswordLoginRequest) returns (UserPasswordLoginResponse)
	@handler PhoneLogin
	post /v1/user/login/auth(PhoneLoginRequest) returns (PhoneLoginResponse)
	@handler SendSmsCode
	get /v1/user/login/smscode/:phone(SendSmsCodeRequest) returns(SendSmsCodeReponse)
}

@server (
	jwt: JwtAuth
	middleware: SetUidToCtxMiddleware
)

service api-api {
	@handler UserCurrInfo
	get /v1/user/curr/user(UserCurrInfoRequest) returns(UserCurrInfoResponse)
	@handler IsFocusUser
	get /v1/user/isfocus(IsFocusUserRequest) returns(IsFocusUserResponse)
	@handler FocusUser
	post /v1/user/focus(FocusUserRequest) returns(FocusUserResponse)
	@handler CancelFocusUser
	delete /v1/user/focus(CancelFocusUserRequest) returns(CancelFocusUserResponse)
	@handler UserFocusList
	get /v1/user/focus(UserFocusListRequest) returns(UserFocusListResponse)
	@handler UserFansList
	get /v1/user/fans(UserFansListRequest) returns(UserFansListResponse)
}