type UserPasswordLoginRequest {
	UserName string `json:"username"`
	Password string `json:"password"`
}
type UserPasswordLoginResponse {
	Token        string `json:"token"`
	RefreshToken string `json:"refresh_token"`
}
type PhoneLoginRequest {
	Phone string `json:"mobile"`
	Code  string `json:"sms_code"`
}
type PhoneLoginResponse {
	Token        string `json:"token"`
	RefreshToken string `json:"refresh_token"`
}

type SendSmsCodeRequest{}

type SendSmsCodeReponse{}

type UserCurrInfoRequest{}

type UserCurrInfoResponse {
	UserName  string `json:"user_name"`
	HeadPhoto string `json:"head_photo"`
	Introduce string `json:"introduce"`
	CodeYear  int32  `json:"code_year"`
	Career    string `json:"career"`
	Focus     int32  `json:"focus"`
	Fans      int32  `json:"fans"`
	Visitor   int32  `json:"visitor"`
}

service api-api {
	@handler UserPasswordLogin
	post /v1/login(UserPasswordLoginRequest) returns (UserPasswordLoginResponse)
	@handler PhoneLogin
	post /v1/login/auth(PhoneLoginRequest) returns (PhoneLoginResponse)
	@handler SendSmsCode
	get /v1/login/smscode/:phone(SendSmsCodeRequest) returns(SendSmsCodeReponse)
}

@server (
	jwt: JwtAuth
	middleware: SetUidToCtxMiddleware
)

service api-api {
	@handler UserCurrInfo
	get /v1/curr/user(UserCurrInfoRequest) returns(UserCurrInfoResponse)
}