syntax = "proto3";

package user;
option go_package = "./user";

message LoginRequest {
    string authType = 1;
    string account = 2;
    string password = 3;
}

message LoginResponse {
    string token = 1;
    string refresh_token = 2;
}

message GenerateTokenRequest {
  int64 userId = 1;
}
message GenerateTokenResponse {
  string accessToken = 1;
  int64  accessExpire = 2;
  int64  refreshAfter = 3;
}

message UserCurrInfoRequest{
  int64 userId = 1;
}

message UserCurrInfoResponse{
    string user_name = 1;
    string head_photo = 2;
    string introduce = 3;
    int32 code_year = 4;
    string career = 5;
    int32 focus = 6;
    int32 fans = 7;
    int32 visitor = 8;
}

message SmsRequest{
  string phone = 1;
}

message SmsResponse{}

message IsFocusUserRequest{
  string TargetId = 1;
  string UserId = 2;
}

message IsFocusUserResponse{
  bool IsFocusUser = 1;
}

message FocusUserRequest{
  string TargetId = 1;
  string UserId = 2;
}

message FocusUserResponse{
  string TargetId = 1;
}

message CancelFocusUserRequest{
  string TargetId = 1;
  string UserId = 2;
}

message CancelFocusUserResponse{
}

service User {
  rpc UserLogin(LoginRequest) returns(LoginResponse);
  rpc generateToken(GenerateTokenRequest) returns(GenerateTokenResponse);
  rpc UserCurrInfo(UserCurrInfoRequest) returns(UserCurrInfoResponse);
  rpc SendSmsCode(SmsRequest) returns(SmsResponse);
  rpc IsFocueUser(IsFocusUserRequest) returns(IsFocusUserResponse);
  rpc FocueUser(FocusUserRequest) returns(FocusUserResponse);
  rpc CancelFocueUser(CancelFocusUserRequest) returns(CancelFocusUserResponse);
}