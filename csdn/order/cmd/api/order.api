type Sku {
	SkuId  int64  `json:"sku_id"`
	SpecId string `json:"spec_id"`
	Specs  string `json:"specs"`
	Count  int64  `json:"count"`
}

type OrderCreateRequest {
	AddressId  int64   `json:"address_id"`
	TotalCount int64   `json:"total_count"`
	TotalPrice float32 `json:"total_price"`
	Freight    float32 `json:"freight"`
	Version    int64   `json:"version"`
	Sn         string  `json:"sn"`
	Sku        []Sku   `json:"sku"`
}

type OrderCreateResponse {
	Sn string `json:"sn"`
}

type OrderGetRequest{}

type Orders {
	Title        string  `json:"title"`
	DefaultImage string  `json:"default_image"`
	Price        float32 `json:"price"`
	Count        int64   `json:"count"`
	Sn           string  `json:"sn"`
	Freight      float32 `json:"freight"`
	SkuId        int64   `json:"sku_id"`
	SpecId       string  `json:"spec_id"`
	Specs        string  `json:"specs"`
	OrderId      int64   `json:"order_id"`
}

type OrderGetResponse {
	Orders []Orders `json:"orders"`
}

@server (
	// jwt: JwtAuth
	middleware: SetUidToCtxMiddleware
)

service api-api {
	@handler OrderCreate
	post /v1/order/add(OrderCreateRequest) returns (OrderCreateResponse)
	@handler OrderGet
	get /v1/order/get(OrderGetRequest) returns (OrderGetResponse)
}