type Sku {
	SkuId  int64  `json:"sku_id"`
	SpecId string `json:"spec_id"`
	Specs  string `json:"specs"`
	Count  int64  `json:"count"`
}

type OrderCreateRequest {
	AddressId  int64   `json:"address_id"`
	TotalCount int64   `json:"total_count"`
	TotalPrice float32 `json:"total_price"`
	Sku        []Sku   `json:"sku"`
}

type OrderCreateResponse {
	Sn string `json:"sn"`
}

type OrderGetRequest {
	PayStatus int64 `json:"pay_status,optional"`
}

type OrderSpec {
	SkuId        int64   `json:"sku_id"`
	SpecId       string  `json:"spec_id"`
	Specs        string  `json:"specs"`
	Count        int64   `json:"count"`
	Price        float32 `json:"price"`
	DefaultImage string  `json:"default_image"`
	Title        string  `json:"title"`
}
type OrderInfo {
	TotalPrice float32      `json:"total_price"`
	TotalCount int64        `json:"total_count"`
	Sn         string       `json:"sn"`
	Freight    float32      `json:"freight"`
	AddressId  int64        `json:"address_id"`
	PayStatus  int64        `json:"pay_status"`
	OrderSpec  []*OrderSpec `json:"order_spec"`
}
type OrderGetResponse {
	OrderInfo []*OrderInfo `json:"order_info"`
}

type OrderUpdateRequest {
	Sn        string `json:"sn"`
	PayStatus int64  `json:"pay_status"`
}

type OrderUpdateResponse {
	Sn string `json:"sn"`
}

@server (
	// jwt: JwtAuth
	middleware: SetUidToCtxMiddleware
)

service api-api {
	@handler OrderCreate
	post /v1/order/add(OrderCreateRequest) returns (OrderCreateResponse)
	@handler OrderGet
	get /v1/order/get(OrderGetRequest) returns (OrderGetResponse)
	@handler OrderUpdate
	patch /v1/order/update(OrderUpdateRequest) returns (OrderUpdateResponse)
}