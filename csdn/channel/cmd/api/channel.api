type ChannelList {
	Id          int64  `json:"id"`
	ChannelName string `json:"channel_name"`
}
type ArticleList {
	Title         string `json:"title"`
	UserId        int64  `json:"user_id"`
	CreateTime    string `json:"create_time"`
	ArtId         int64  `json:"art_id"`
	ChannelId     int64  `json:"channel_id"`
	Content       string `json:"content"`
	AllowComment  int32  `json:"allow_comment"`
	UserName      string `json:"user_name"`
	HeadPhoto     string `json:"head_photo"`
	Career        string `json:"career"`
	CodeYear      int32  `json:"code_year"`
	ReadNum       int32  `json:"read_Num"`
	CommentNum    int32  `json:"comment_num"`
	LikeNum       int32  `json:"like_num"`
	CollectionNum int32  `json:"collection_num"`
}
type AllChannelRequest{}

type AllChannelResponse {
	Channels []ChannelList `json:"channels"`
}
type DefaultChannelRequest{}

type DefaultChannelResponse {
	Channels []ChannelList `json:"default_channel"`
}

type UserChannelRequest{}

type UserChannelResponse {
	Channels []ChannelList `json:"channels"`
}

type UserAddChannelRequest {
	ChannelId   int64  `json:"channel_id"`
	ChannelName string `json:"channel_name"`
}

type UserAddChannelResponse {
	Channels []ChannelList `json:"channels"`
}
type UserPatchChannelRequest {
	ChannelId int64 `json:"channel_id"`
}

type UserPatchChannelResponse {
	Channels []ChannelList `json:"channels"`
}
type AllArticleRequest {
	Page    int32 `json:"page,optional"`
	PageNum int32 `json:"page_num,optional"`
}

type AllArticleResponse {
	Articles []ArticleList `json:"articles"`
}

type ArticleStatusRequest {
	UserId    string `json:"usid,optional"`
	ArticleId string `json:"aid,optional"`
}

type ArticleStatusResponse {
	Isfocus       bool   `json:"isfocus"`
	Iscollection  bool   `json:"iscollection"`
	Islike        bool   `json:"islike"`
	CollectionNum int64  `json:"collection_num"`
	LikeNum       int64  `json:"like_num"`
	ReadNum       int64  `json:"read_num"`
	Aid           string `json:"aid"`
}

type ArticleReadRequest {
	UserId    string `json:"uid,optional"`
	ArticleId int64  `json:"aid,optional"`
}

type ArticleReadResponse {
	Message string `json:"message"`
	Aid     int64  `json:"aid"`
}

service api-api {
	@handler AllChannel
	get /v1/channel/articles/channel(AllChannelRequest) returns (AllChannelResponse)
	@handler DefaultChannel
	get /v1/channel/default/channel(DefaultChannelRequest) returns (DefaultChannelResponse)
	@handler AllArticle
	get /v1/article/articles/:channel_id(AllArticleRequest) returns (AllArticleResponse)
	@handler ArticleStatus
	get /v1/article/status(ArticleStatusRequest) returns (ArticleStatusResponse)
}

@server (
	jwt: JwtAuth
	middleware: SetUidToCtxMiddleware
)

service api-api {
	@handler UserChannel
	get /v1/channel/user/channel(UserChannelRequest) returns (UserChannelResponse)
	@handler UserAddChannel
	post /v1/channel/user/channel(UserAddChannelRequest) returns (UserAddChannelResponse)
	@handler UserPatchChannel
	patch /v1/channel/user/channel(UserPatchChannelRequest) returns (UserPatchChannelResponse)
	@handler ArticleRead
	post /v1/article/reads(ArticleReadRequest) returns (ArticleReadResponse)
}