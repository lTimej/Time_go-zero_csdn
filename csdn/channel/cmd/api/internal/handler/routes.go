// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	"liujun/Time_go-zero_csdn/csdn/channel/cmd/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/v1/channel/articles/channel",
				Handler: AllChannelHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/v1/channel/default/channel",
				Handler: DefaultChannelHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/v1/article/articles/:channel_id",
				Handler: AllArticleHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/v1/article/likes",
				Handler: ArticleLikeHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/v1/article/comment",
				Handler: ArticleCommentListHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.SetUidToCtxMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/v1/channel/user/channel",
					Handler: UserChannelHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/v1/channel/user/channel",
					Handler: UserAddChannelHandler(serverCtx),
				},
				{
					Method:  http.MethodPatch,
					Path:    "/v1/channel/user/channel",
					Handler: UserPatchChannelHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/v1/article/reads",
					Handler: ArticleReadHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/v1/article/likes",
					Handler: ArticleToLikeHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/v1/article/likes",
					Handler: ArticleToDisLikeHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/v1/article/status",
					Handler: ArticleStatusHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/v1/article/collection",
					Handler: ArticleToCollectionHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/v1/article/collection",
					Handler: ArticleToDisCollectionHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/v1/article/collection",
					Handler: ArticleUserCollectionHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/v1/article/comment",
					Handler: ArticleToCommentHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
	)
}
