// Code generated by goctl. DO NOT EDIT.
// Source: channel.proto

package channelclient

import (
	"context"

	"liujun/Time_go-zero_csdn/csdn/channel/cmd/rpc/types/channel"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ChannelList         = channel.ChannelList
	ChannelListRequest  = channel.ChannelListRequest
	ChannelListResponse = channel.ChannelListResponse

	Channel interface {
		AllChannel(ctx context.Context, in *ChannelListRequest, opts ...grpc.CallOption) (*ChannelListResponse, error)
	}

	defaultChannel struct {
		cli zrpc.Client
	}
)

func NewChannel(cli zrpc.Client) Channel {
	return &defaultChannel{
		cli: cli,
	}
}

func (m *defaultChannel) AllChannel(ctx context.Context, in *ChannelListRequest, opts ...grpc.CallOption) (*ChannelListResponse, error) {
	client := channel.NewChannelClient(m.cli.Conn())
	return client.AllChannel(ctx, in, opts...)
}
