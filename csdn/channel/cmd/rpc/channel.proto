syntax = "proto3";

package channel;

option go_package = "./channel";

message ChannelList{
    int64 id = 1;
    string channel_name = 2;
}

message ArticleList{
    string Title = 1;
    string UserId = 2;
    string CreateTime = 3;
    int64 ArtId = 4;
    int64 ChannelId = 5;
    string Content = 6;
    int32 AllowComment = 7;
    string UserName = 8;
    string HeadPhoto = 9;
    string career = 10;
    int32 CodeYear = 11;
    int32 ReadNum = 12;
    int32 CommentNum = 13;
    int32 LikeNum = 14;
    int32 CollectionNum = 15;
}

message ChannelListRequest {}

message ChannelListResponse {
    repeated ChannelList channels = 1;
}

message DefaultChannelRequest{}

message DefaultChannelResponse{
    repeated ChannelList channels = 1;
}

message UserChannelRequest{
    string userId = 1;
}

message UserChannelResponse{
    repeated ChannelList channels = 1;
}

message UserAddChannelRequest{
    int64 ChannelId = 1;
    string ChannelName = 2;
    string userId = 3;
}

message UserAddChannelResponse{
    repeated ChannelList channels = 1;
}

message UserPatchChannelRequest{
    int64 ChannelId = 1;
    string userId = 2;
}

message UserPatchChannelResponse{
    repeated ChannelList channels = 1;
}

message ArticleChannelRequest{
    int64 ChannelId = 1;
    int32 Page = 2;
    int32 PageNum = 3;
}

message ArticleChannelResponse{
    repeated ArticleList articles = 1;
}

message ArticlestatusRequest{
    int64 ArticleId = 1;
    string UserId = 2;
    string TargetId = 3;
}

message ArticlestatusResponse{
    bool Isfocus = 1;
    bool Iscollection = 2;
    bool Islike = 3;
    int64 CollectionNum = 4;
    int64 LikeNum = 5;
    int64 ReadNum = 6;
    int64 Aid = 7;
}

message ArticleReadRequest{
    string UserId = 1;
    int64 ArticleId = 2;
}

message ArticleReadResponse{
    int64 Aid = 7;
}

message ArticleLikeRequest{
    int64 ArticleId = 2;
}

message ArticleLikeResponse{
    message UserInfo{
        string HeadPhoto = 1;
        int64 Aid = 2;
    }
    repeated UserInfo UsersInfo = 1;
}

message ArticleToLikeRequest{
    string UserId = 1;
    int64 ArticleId = 2;
}

message ArticleToLikeResponse{
    int64 Aid = 3;
}

message ArticleToDisLikeRequest{
    string UserId = 1;
    int64 ArticleId = 2;
}

message ArticleToDisLikeResponse{
    int64 Aid = 3;
}

message ArticleStatusCacheRequest{}

message ArticleStatusCacheResponse{}

message ArticleToCollectionRequest{
    string UserId = 1;
    int64 Aid = 2;
}

message ArticleToCollectionResponse{
    int64 Aid = 1;
}

message ArticleToDisCollectionRequest{
    string UserId = 1;
    int64 Aid = 2;
}

message ArticleToDisCollectionResponse{}

message ArticleUserCollectionRequest{
    string UserId = 1;
    int32 Page = 2;
    int32 PageNum = 3;
}

message ArticleUserCollectionResponse{
    repeated ArticleList articles = 1;
}

message ArticleToCommnetRequest{
    int64 ArticleId = 1;
    int64 CommentId = 2;
    string Content = 3;
    string UserId = 4;
}

message ArticleToCommentResponse{
    int64 CommentId = 1;
    int64 ArticleId = 2;
    int64 CommentParentId = 3;
}

service Channel {
    rpc AllChannel(ChannelListRequest) returns(ChannelListResponse);
    rpc DefaultChannel(DefaultChannelRequest) returns(DefaultChannelResponse);
    rpc UserChannel(UserChannelRequest) returns(UserChannelResponse);
    rpc UserAddChannel(UserAddChannelRequest) returns(UserAddChannelResponse);
    rpc UserPatchChannel(UserPatchChannelRequest) returns(UserPatchChannelResponse);
    rpc ArticleChannel(ArticleChannelRequest) returns(ArticleChannelResponse);
    rpc ArticleStatus(ArticlestatusRequest) returns(ArticlestatusResponse);
    rpc ArticleRead(ArticleReadRequest) returns(ArticleReadResponse);
    rpc ArticleLike(ArticleLikeRequest) returns(ArticleLikeResponse);
    rpc ArticleToLike(ArticleToLikeRequest) returns(ArticleToLikeResponse);
    rpc ArticleToDisLike(ArticleToDisLikeRequest) returns(ArticleToDisLikeResponse);
    rpc ArticleStatusCache(ArticleStatusCacheRequest) returns(ArticleStatusCacheResponse);
    rpc ArticleToCollection(ArticleToCollectionRequest) returns(ArticleToCollectionResponse);
    rpc ArticleToDisCollection(ArticleToDisCollectionRequest) returns(ArticleToDisCollectionResponse);
    rpc ArticleUserCollection(ArticleUserCollectionRequest) returns(ArticleUserCollectionResponse);
    rpc ArticleToComment(ArticleToCommnetRequest) returns(ArticleToCommentResponse);
}