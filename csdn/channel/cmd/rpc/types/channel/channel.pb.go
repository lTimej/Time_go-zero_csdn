// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.1
// source: channel.proto

package channel

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChannelList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ChannelName string `protobuf:"bytes,2,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
}

func (x *ChannelList) Reset() {
	*x = ChannelList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelList) ProtoMessage() {}

func (x *ChannelList) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelList.ProtoReflect.Descriptor instead.
func (*ChannelList) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{0}
}

func (x *ChannelList) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ChannelList) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

type ArticleList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title         string `protobuf:"bytes,1,opt,name=Title,proto3" json:"Title,omitempty"`
	UserId        string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	CreateTime    string `protobuf:"bytes,3,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	ArtId         int64  `protobuf:"varint,4,opt,name=ArtId,proto3" json:"ArtId,omitempty"`
	ChannelId     int64  `protobuf:"varint,5,opt,name=ChannelId,proto3" json:"ChannelId,omitempty"`
	Content       string `protobuf:"bytes,6,opt,name=Content,proto3" json:"Content,omitempty"`
	AllowComment  int32  `protobuf:"varint,7,opt,name=AllowComment,proto3" json:"AllowComment,omitempty"`
	UserName      string `protobuf:"bytes,8,opt,name=UserName,proto3" json:"UserName,omitempty"`
	HeadPhoto     string `protobuf:"bytes,9,opt,name=HeadPhoto,proto3" json:"HeadPhoto,omitempty"`
	Career        string `protobuf:"bytes,10,opt,name=career,proto3" json:"career,omitempty"`
	CodeYear      int32  `protobuf:"varint,11,opt,name=CodeYear,proto3" json:"CodeYear,omitempty"`
	ReadNum       int32  `protobuf:"varint,12,opt,name=ReadNum,proto3" json:"ReadNum,omitempty"`
	CommentNum    int32  `protobuf:"varint,13,opt,name=CommentNum,proto3" json:"CommentNum,omitempty"`
	LikeNum       int32  `protobuf:"varint,14,opt,name=LikeNum,proto3" json:"LikeNum,omitempty"`
	CollectionNum int32  `protobuf:"varint,15,opt,name=CollectionNum,proto3" json:"CollectionNum,omitempty"`
}

func (x *ArticleList) Reset() {
	*x = ArticleList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleList) ProtoMessage() {}

func (x *ArticleList) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleList.ProtoReflect.Descriptor instead.
func (*ArticleList) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{1}
}

func (x *ArticleList) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ArticleList) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ArticleList) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ArticleList) GetArtId() int64 {
	if x != nil {
		return x.ArtId
	}
	return 0
}

func (x *ArticleList) GetChannelId() int64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *ArticleList) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ArticleList) GetAllowComment() int32 {
	if x != nil {
		return x.AllowComment
	}
	return 0
}

func (x *ArticleList) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ArticleList) GetHeadPhoto() string {
	if x != nil {
		return x.HeadPhoto
	}
	return ""
}

func (x *ArticleList) GetCareer() string {
	if x != nil {
		return x.Career
	}
	return ""
}

func (x *ArticleList) GetCodeYear() int32 {
	if x != nil {
		return x.CodeYear
	}
	return 0
}

func (x *ArticleList) GetReadNum() int32 {
	if x != nil {
		return x.ReadNum
	}
	return 0
}

func (x *ArticleList) GetCommentNum() int32 {
	if x != nil {
		return x.CommentNum
	}
	return 0
}

func (x *ArticleList) GetLikeNum() int32 {
	if x != nil {
		return x.LikeNum
	}
	return 0
}

func (x *ArticleList) GetCollectionNum() int32 {
	if x != nil {
		return x.CollectionNum
	}
	return 0
}

type CommentList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentId       int64  `protobuf:"varint,1,opt,name=CommentId,proto3" json:"CommentId,omitempty"`
	ParentCommentId int64  `protobuf:"varint,2,opt,name=ParentCommentId,proto3" json:"ParentCommentId,omitempty"`
	Ctime           string `protobuf:"bytes,3,opt,name=Ctime,proto3" json:"Ctime,omitempty"`
	AuthorId        string `protobuf:"bytes,4,opt,name=AuthorId,proto3" json:"AuthorId,omitempty"`
	IsTop           int64  `protobuf:"varint,5,opt,name=IsTop,proto3" json:"IsTop,omitempty"`
	Content         string `protobuf:"bytes,6,opt,name=Content,proto3" json:"Content,omitempty"`
	CommentIsLike   int64  `protobuf:"varint,7,opt,name=CommentIsLike,proto3" json:"CommentIsLike,omitempty"`
}

func (x *CommentList) Reset() {
	*x = CommentList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentList) ProtoMessage() {}

func (x *CommentList) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentList.ProtoReflect.Descriptor instead.
func (*CommentList) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{2}
}

func (x *CommentList) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *CommentList) GetParentCommentId() int64 {
	if x != nil {
		return x.ParentCommentId
	}
	return 0
}

func (x *CommentList) GetCtime() string {
	if x != nil {
		return x.Ctime
	}
	return ""
}

func (x *CommentList) GetAuthorId() string {
	if x != nil {
		return x.AuthorId
	}
	return ""
}

func (x *CommentList) GetIsTop() int64 {
	if x != nil {
		return x.IsTop
	}
	return 0
}

func (x *CommentList) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CommentList) GetCommentIsLike() int64 {
	if x != nil {
		return x.CommentIsLike
	}
	return 0
}

type ArticleCommentList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentId       int64          `protobuf:"varint,1,opt,name=CommentId,proto3" json:"CommentId,omitempty"`
	ParentCommentId int64          `protobuf:"varint,2,opt,name=ParentCommentId,proto3" json:"ParentCommentId,omitempty"`
	Ctime           string         `protobuf:"bytes,3,opt,name=Ctime,proto3" json:"Ctime,omitempty"`
	AuthorId        string         `protobuf:"bytes,4,opt,name=AuthorId,proto3" json:"AuthorId,omitempty"`
	IsTop           int64          `protobuf:"varint,5,opt,name=IsTop,proto3" json:"IsTop,omitempty"`
	Content         string         `protobuf:"bytes,6,opt,name=Content,proto3" json:"Content,omitempty"`
	CommentIsLike   int64          `protobuf:"varint,7,opt,name=CommentIsLike,proto3" json:"CommentIsLike,omitempty"`
	CComments       []*CommentList `protobuf:"bytes,8,rep,name=CComments,proto3" json:"CComments,omitempty"`
}

func (x *ArticleCommentList) Reset() {
	*x = ArticleCommentList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleCommentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleCommentList) ProtoMessage() {}

func (x *ArticleCommentList) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleCommentList.ProtoReflect.Descriptor instead.
func (*ArticleCommentList) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{3}
}

func (x *ArticleCommentList) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *ArticleCommentList) GetParentCommentId() int64 {
	if x != nil {
		return x.ParentCommentId
	}
	return 0
}

func (x *ArticleCommentList) GetCtime() string {
	if x != nil {
		return x.Ctime
	}
	return ""
}

func (x *ArticleCommentList) GetAuthorId() string {
	if x != nil {
		return x.AuthorId
	}
	return ""
}

func (x *ArticleCommentList) GetIsTop() int64 {
	if x != nil {
		return x.IsTop
	}
	return 0
}

func (x *ArticleCommentList) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ArticleCommentList) GetCommentIsLike() int64 {
	if x != nil {
		return x.CommentIsLike
	}
	return 0
}

func (x *ArticleCommentList) GetCComments() []*CommentList {
	if x != nil {
		return x.CComments
	}
	return nil
}

type ChannelListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ChannelListRequest) Reset() {
	*x = ChannelListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelListRequest) ProtoMessage() {}

func (x *ChannelListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelListRequest.ProtoReflect.Descriptor instead.
func (*ChannelListRequest) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{4}
}

type ChannelListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channels []*ChannelList `protobuf:"bytes,1,rep,name=channels,proto3" json:"channels,omitempty"`
}

func (x *ChannelListResponse) Reset() {
	*x = ChannelListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelListResponse) ProtoMessage() {}

func (x *ChannelListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelListResponse.ProtoReflect.Descriptor instead.
func (*ChannelListResponse) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{5}
}

func (x *ChannelListResponse) GetChannels() []*ChannelList {
	if x != nil {
		return x.Channels
	}
	return nil
}

type DefaultChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DefaultChannelRequest) Reset() {
	*x = DefaultChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefaultChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultChannelRequest) ProtoMessage() {}

func (x *DefaultChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultChannelRequest.ProtoReflect.Descriptor instead.
func (*DefaultChannelRequest) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{6}
}

type DefaultChannelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channels []*ChannelList `protobuf:"bytes,1,rep,name=channels,proto3" json:"channels,omitempty"`
}

func (x *DefaultChannelResponse) Reset() {
	*x = DefaultChannelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefaultChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultChannelResponse) ProtoMessage() {}

func (x *DefaultChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultChannelResponse.ProtoReflect.Descriptor instead.
func (*DefaultChannelResponse) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{7}
}

func (x *DefaultChannelResponse) GetChannels() []*ChannelList {
	if x != nil {
		return x.Channels
	}
	return nil
}

type UserChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *UserChannelRequest) Reset() {
	*x = UserChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserChannelRequest) ProtoMessage() {}

func (x *UserChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserChannelRequest.ProtoReflect.Descriptor instead.
func (*UserChannelRequest) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{8}
}

func (x *UserChannelRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type UserChannelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channels []*ChannelList `protobuf:"bytes,1,rep,name=channels,proto3" json:"channels,omitempty"`
}

func (x *UserChannelResponse) Reset() {
	*x = UserChannelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserChannelResponse) ProtoMessage() {}

func (x *UserChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserChannelResponse.ProtoReflect.Descriptor instead.
func (*UserChannelResponse) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{9}
}

func (x *UserChannelResponse) GetChannels() []*ChannelList {
	if x != nil {
		return x.Channels
	}
	return nil
}

type UserAddChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId   int64  `protobuf:"varint,1,opt,name=ChannelId,proto3" json:"ChannelId,omitempty"`
	ChannelName string `protobuf:"bytes,2,opt,name=ChannelName,proto3" json:"ChannelName,omitempty"`
	UserId      string `protobuf:"bytes,3,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *UserAddChannelRequest) Reset() {
	*x = UserAddChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAddChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAddChannelRequest) ProtoMessage() {}

func (x *UserAddChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAddChannelRequest.ProtoReflect.Descriptor instead.
func (*UserAddChannelRequest) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{10}
}

func (x *UserAddChannelRequest) GetChannelId() int64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *UserAddChannelRequest) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *UserAddChannelRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type UserAddChannelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channels []*ChannelList `protobuf:"bytes,1,rep,name=channels,proto3" json:"channels,omitempty"`
}

func (x *UserAddChannelResponse) Reset() {
	*x = UserAddChannelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAddChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAddChannelResponse) ProtoMessage() {}

func (x *UserAddChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAddChannelResponse.ProtoReflect.Descriptor instead.
func (*UserAddChannelResponse) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{11}
}

func (x *UserAddChannelResponse) GetChannels() []*ChannelList {
	if x != nil {
		return x.Channels
	}
	return nil
}

type UserPatchChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId int64  `protobuf:"varint,1,opt,name=ChannelId,proto3" json:"ChannelId,omitempty"`
	UserId    string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *UserPatchChannelRequest) Reset() {
	*x = UserPatchChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPatchChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPatchChannelRequest) ProtoMessage() {}

func (x *UserPatchChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPatchChannelRequest.ProtoReflect.Descriptor instead.
func (*UserPatchChannelRequest) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{12}
}

func (x *UserPatchChannelRequest) GetChannelId() int64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *UserPatchChannelRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type UserPatchChannelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channels []*ChannelList `protobuf:"bytes,1,rep,name=channels,proto3" json:"channels,omitempty"`
}

func (x *UserPatchChannelResponse) Reset() {
	*x = UserPatchChannelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPatchChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPatchChannelResponse) ProtoMessage() {}

func (x *UserPatchChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPatchChannelResponse.ProtoReflect.Descriptor instead.
func (*UserPatchChannelResponse) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{13}
}

func (x *UserPatchChannelResponse) GetChannels() []*ChannelList {
	if x != nil {
		return x.Channels
	}
	return nil
}

type ArticleChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId int64 `protobuf:"varint,1,opt,name=ChannelId,proto3" json:"ChannelId,omitempty"`
	Page      int32 `protobuf:"varint,2,opt,name=Page,proto3" json:"Page,omitempty"`
	PageNum   int32 `protobuf:"varint,3,opt,name=PageNum,proto3" json:"PageNum,omitempty"`
}

func (x *ArticleChannelRequest) Reset() {
	*x = ArticleChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleChannelRequest) ProtoMessage() {}

func (x *ArticleChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleChannelRequest.ProtoReflect.Descriptor instead.
func (*ArticleChannelRequest) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{14}
}

func (x *ArticleChannelRequest) GetChannelId() int64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *ArticleChannelRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ArticleChannelRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

type ArticleChannelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Articles []*ArticleList `protobuf:"bytes,1,rep,name=articles,proto3" json:"articles,omitempty"`
}

func (x *ArticleChannelResponse) Reset() {
	*x = ArticleChannelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleChannelResponse) ProtoMessage() {}

func (x *ArticleChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleChannelResponse.ProtoReflect.Descriptor instead.
func (*ArticleChannelResponse) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{15}
}

func (x *ArticleChannelResponse) GetArticles() []*ArticleList {
	if x != nil {
		return x.Articles
	}
	return nil
}

type ArticlestatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArticleId int64  `protobuf:"varint,1,opt,name=ArticleId,proto3" json:"ArticleId,omitempty"`
	UserId    string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	TargetId  string `protobuf:"bytes,3,opt,name=TargetId,proto3" json:"TargetId,omitempty"`
}

func (x *ArticlestatusRequest) Reset() {
	*x = ArticlestatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticlestatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticlestatusRequest) ProtoMessage() {}

func (x *ArticlestatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticlestatusRequest.ProtoReflect.Descriptor instead.
func (*ArticlestatusRequest) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{16}
}

func (x *ArticlestatusRequest) GetArticleId() int64 {
	if x != nil {
		return x.ArticleId
	}
	return 0
}

func (x *ArticlestatusRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ArticlestatusRequest) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

type ArticlestatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Isfocus       bool  `protobuf:"varint,1,opt,name=Isfocus,proto3" json:"Isfocus,omitempty"`
	Iscollection  bool  `protobuf:"varint,2,opt,name=Iscollection,proto3" json:"Iscollection,omitempty"`
	Islike        bool  `protobuf:"varint,3,opt,name=Islike,proto3" json:"Islike,omitempty"`
	CollectionNum int64 `protobuf:"varint,4,opt,name=CollectionNum,proto3" json:"CollectionNum,omitempty"`
	LikeNum       int64 `protobuf:"varint,5,opt,name=LikeNum,proto3" json:"LikeNum,omitempty"`
	ReadNum       int64 `protobuf:"varint,6,opt,name=ReadNum,proto3" json:"ReadNum,omitempty"`
	Aid           int64 `protobuf:"varint,7,opt,name=Aid,proto3" json:"Aid,omitempty"`
}

func (x *ArticlestatusResponse) Reset() {
	*x = ArticlestatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticlestatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticlestatusResponse) ProtoMessage() {}

func (x *ArticlestatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticlestatusResponse.ProtoReflect.Descriptor instead.
func (*ArticlestatusResponse) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{17}
}

func (x *ArticlestatusResponse) GetIsfocus() bool {
	if x != nil {
		return x.Isfocus
	}
	return false
}

func (x *ArticlestatusResponse) GetIscollection() bool {
	if x != nil {
		return x.Iscollection
	}
	return false
}

func (x *ArticlestatusResponse) GetIslike() bool {
	if x != nil {
		return x.Islike
	}
	return false
}

func (x *ArticlestatusResponse) GetCollectionNum() int64 {
	if x != nil {
		return x.CollectionNum
	}
	return 0
}

func (x *ArticlestatusResponse) GetLikeNum() int64 {
	if x != nil {
		return x.LikeNum
	}
	return 0
}

func (x *ArticlestatusResponse) GetReadNum() int64 {
	if x != nil {
		return x.ReadNum
	}
	return 0
}

func (x *ArticlestatusResponse) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

type ArticleReadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	ArticleId int64  `protobuf:"varint,2,opt,name=ArticleId,proto3" json:"ArticleId,omitempty"`
}

func (x *ArticleReadRequest) Reset() {
	*x = ArticleReadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleReadRequest) ProtoMessage() {}

func (x *ArticleReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleReadRequest.ProtoReflect.Descriptor instead.
func (*ArticleReadRequest) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{18}
}

func (x *ArticleReadRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ArticleReadRequest) GetArticleId() int64 {
	if x != nil {
		return x.ArticleId
	}
	return 0
}

type ArticleReadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid int64 `protobuf:"varint,7,opt,name=Aid,proto3" json:"Aid,omitempty"`
}

func (x *ArticleReadResponse) Reset() {
	*x = ArticleReadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleReadResponse) ProtoMessage() {}

func (x *ArticleReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleReadResponse.ProtoReflect.Descriptor instead.
func (*ArticleReadResponse) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{19}
}

func (x *ArticleReadResponse) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

type ArticleLikeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArticleId int64 `protobuf:"varint,2,opt,name=ArticleId,proto3" json:"ArticleId,omitempty"`
}

func (x *ArticleLikeRequest) Reset() {
	*x = ArticleLikeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleLikeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleLikeRequest) ProtoMessage() {}

func (x *ArticleLikeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleLikeRequest.ProtoReflect.Descriptor instead.
func (*ArticleLikeRequest) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{20}
}

func (x *ArticleLikeRequest) GetArticleId() int64 {
	if x != nil {
		return x.ArticleId
	}
	return 0
}

type ArticleLikeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UsersInfo []*ArticleLikeResponse_UserInfo `protobuf:"bytes,1,rep,name=UsersInfo,proto3" json:"UsersInfo,omitempty"`
}

func (x *ArticleLikeResponse) Reset() {
	*x = ArticleLikeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleLikeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleLikeResponse) ProtoMessage() {}

func (x *ArticleLikeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleLikeResponse.ProtoReflect.Descriptor instead.
func (*ArticleLikeResponse) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{21}
}

func (x *ArticleLikeResponse) GetUsersInfo() []*ArticleLikeResponse_UserInfo {
	if x != nil {
		return x.UsersInfo
	}
	return nil
}

type ArticleToLikeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	ArticleId int64  `protobuf:"varint,2,opt,name=ArticleId,proto3" json:"ArticleId,omitempty"`
}

func (x *ArticleToLikeRequest) Reset() {
	*x = ArticleToLikeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleToLikeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleToLikeRequest) ProtoMessage() {}

func (x *ArticleToLikeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleToLikeRequest.ProtoReflect.Descriptor instead.
func (*ArticleToLikeRequest) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{22}
}

func (x *ArticleToLikeRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ArticleToLikeRequest) GetArticleId() int64 {
	if x != nil {
		return x.ArticleId
	}
	return 0
}

type ArticleToLikeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid int64 `protobuf:"varint,3,opt,name=Aid,proto3" json:"Aid,omitempty"`
}

func (x *ArticleToLikeResponse) Reset() {
	*x = ArticleToLikeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleToLikeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleToLikeResponse) ProtoMessage() {}

func (x *ArticleToLikeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleToLikeResponse.ProtoReflect.Descriptor instead.
func (*ArticleToLikeResponse) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{23}
}

func (x *ArticleToLikeResponse) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

type ArticleToDisLikeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	ArticleId int64  `protobuf:"varint,2,opt,name=ArticleId,proto3" json:"ArticleId,omitempty"`
}

func (x *ArticleToDisLikeRequest) Reset() {
	*x = ArticleToDisLikeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleToDisLikeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleToDisLikeRequest) ProtoMessage() {}

func (x *ArticleToDisLikeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleToDisLikeRequest.ProtoReflect.Descriptor instead.
func (*ArticleToDisLikeRequest) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{24}
}

func (x *ArticleToDisLikeRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ArticleToDisLikeRequest) GetArticleId() int64 {
	if x != nil {
		return x.ArticleId
	}
	return 0
}

type ArticleToDisLikeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid int64 `protobuf:"varint,3,opt,name=Aid,proto3" json:"Aid,omitempty"`
}

func (x *ArticleToDisLikeResponse) Reset() {
	*x = ArticleToDisLikeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleToDisLikeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleToDisLikeResponse) ProtoMessage() {}

func (x *ArticleToDisLikeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleToDisLikeResponse.ProtoReflect.Descriptor instead.
func (*ArticleToDisLikeResponse) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{25}
}

func (x *ArticleToDisLikeResponse) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

type ArticleStatusCacheRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ArticleStatusCacheRequest) Reset() {
	*x = ArticleStatusCacheRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleStatusCacheRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleStatusCacheRequest) ProtoMessage() {}

func (x *ArticleStatusCacheRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleStatusCacheRequest.ProtoReflect.Descriptor instead.
func (*ArticleStatusCacheRequest) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{26}
}

type ArticleStatusCacheResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ArticleStatusCacheResponse) Reset() {
	*x = ArticleStatusCacheResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleStatusCacheResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleStatusCacheResponse) ProtoMessage() {}

func (x *ArticleStatusCacheResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleStatusCacheResponse.ProtoReflect.Descriptor instead.
func (*ArticleStatusCacheResponse) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{27}
}

type ArticleToCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Aid    int64  `protobuf:"varint,2,opt,name=Aid,proto3" json:"Aid,omitempty"`
}

func (x *ArticleToCollectionRequest) Reset() {
	*x = ArticleToCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleToCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleToCollectionRequest) ProtoMessage() {}

func (x *ArticleToCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleToCollectionRequest.ProtoReflect.Descriptor instead.
func (*ArticleToCollectionRequest) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{28}
}

func (x *ArticleToCollectionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ArticleToCollectionRequest) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

type ArticleToCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid int64 `protobuf:"varint,1,opt,name=Aid,proto3" json:"Aid,omitempty"`
}

func (x *ArticleToCollectionResponse) Reset() {
	*x = ArticleToCollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleToCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleToCollectionResponse) ProtoMessage() {}

func (x *ArticleToCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleToCollectionResponse.ProtoReflect.Descriptor instead.
func (*ArticleToCollectionResponse) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{29}
}

func (x *ArticleToCollectionResponse) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

type ArticleToDisCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Aid    int64  `protobuf:"varint,2,opt,name=Aid,proto3" json:"Aid,omitempty"`
}

func (x *ArticleToDisCollectionRequest) Reset() {
	*x = ArticleToDisCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleToDisCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleToDisCollectionRequest) ProtoMessage() {}

func (x *ArticleToDisCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleToDisCollectionRequest.ProtoReflect.Descriptor instead.
func (*ArticleToDisCollectionRequest) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{30}
}

func (x *ArticleToDisCollectionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ArticleToDisCollectionRequest) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

type ArticleToDisCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ArticleToDisCollectionResponse) Reset() {
	*x = ArticleToDisCollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleToDisCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleToDisCollectionResponse) ProtoMessage() {}

func (x *ArticleToDisCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleToDisCollectionResponse.ProtoReflect.Descriptor instead.
func (*ArticleToDisCollectionResponse) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{31}
}

type ArticleUserCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Page    int32  `protobuf:"varint,2,opt,name=Page,proto3" json:"Page,omitempty"`
	PageNum int32  `protobuf:"varint,3,opt,name=PageNum,proto3" json:"PageNum,omitempty"`
}

func (x *ArticleUserCollectionRequest) Reset() {
	*x = ArticleUserCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleUserCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleUserCollectionRequest) ProtoMessage() {}

func (x *ArticleUserCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleUserCollectionRequest.ProtoReflect.Descriptor instead.
func (*ArticleUserCollectionRequest) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{32}
}

func (x *ArticleUserCollectionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ArticleUserCollectionRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ArticleUserCollectionRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

type ArticleUserCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Articles []*ArticleList `protobuf:"bytes,1,rep,name=articles,proto3" json:"articles,omitempty"`
}

func (x *ArticleUserCollectionResponse) Reset() {
	*x = ArticleUserCollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleUserCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleUserCollectionResponse) ProtoMessage() {}

func (x *ArticleUserCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleUserCollectionResponse.ProtoReflect.Descriptor instead.
func (*ArticleUserCollectionResponse) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{33}
}

func (x *ArticleUserCollectionResponse) GetArticles() []*ArticleList {
	if x != nil {
		return x.Articles
	}
	return nil
}

type ArticleToCommnetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArticleId int64  `protobuf:"varint,1,opt,name=ArticleId,proto3" json:"ArticleId,omitempty"`
	CommentId int64  `protobuf:"varint,2,opt,name=CommentId,proto3" json:"CommentId,omitempty"`
	Content   string `protobuf:"bytes,3,opt,name=Content,proto3" json:"Content,omitempty"`
	UserId    string `protobuf:"bytes,4,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *ArticleToCommnetRequest) Reset() {
	*x = ArticleToCommnetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleToCommnetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleToCommnetRequest) ProtoMessage() {}

func (x *ArticleToCommnetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleToCommnetRequest.ProtoReflect.Descriptor instead.
func (*ArticleToCommnetRequest) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{34}
}

func (x *ArticleToCommnetRequest) GetArticleId() int64 {
	if x != nil {
		return x.ArticleId
	}
	return 0
}

func (x *ArticleToCommnetRequest) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *ArticleToCommnetRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ArticleToCommnetRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ArticleToCommentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentId       int64 `protobuf:"varint,1,opt,name=CommentId,proto3" json:"CommentId,omitempty"`
	ArticleId       int64 `protobuf:"varint,2,opt,name=ArticleId,proto3" json:"ArticleId,omitempty"`
	CommentParentId int64 `protobuf:"varint,3,opt,name=CommentParentId,proto3" json:"CommentParentId,omitempty"`
}

func (x *ArticleToCommentResponse) Reset() {
	*x = ArticleToCommentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleToCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleToCommentResponse) ProtoMessage() {}

func (x *ArticleToCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleToCommentResponse.ProtoReflect.Descriptor instead.
func (*ArticleToCommentResponse) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{35}
}

func (x *ArticleToCommentResponse) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *ArticleToCommentResponse) GetArticleId() int64 {
	if x != nil {
		return x.ArticleId
	}
	return 0
}

func (x *ArticleToCommentResponse) GetCommentParentId() int64 {
	if x != nil {
		return x.CommentParentId
	}
	return 0
}

type ArticleCommentListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	ArticleId int64  `protobuf:"varint,2,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"`
	Offset    int64  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit     int64  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ArticleCommentListRequest) Reset() {
	*x = ArticleCommentListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleCommentListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleCommentListRequest) ProtoMessage() {}

func (x *ArticleCommentListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleCommentListRequest.ProtoReflect.Descriptor instead.
func (*ArticleCommentListRequest) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{36}
}

func (x *ArticleCommentListRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ArticleCommentListRequest) GetArticleId() int64 {
	if x != nil {
		return x.ArticleId
	}
	return 0
}

func (x *ArticleCommentListRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ArticleCommentListRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ArticleCommentListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comments []*ArticleCommentList `protobuf:"bytes,1,rep,name=Comments,proto3" json:"Comments,omitempty"`
	TotalNum int64                 `protobuf:"varint,2,opt,name=TotalNum,proto3" json:"TotalNum,omitempty"`
	EndId    int64                 `protobuf:"varint,3,opt,name=EndId,proto3" json:"EndId,omitempty"`
	LastId   int64                 `protobuf:"varint,4,opt,name=LastId,proto3" json:"LastId,omitempty"`
}

func (x *ArticleCommentListResponse) Reset() {
	*x = ArticleCommentListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleCommentListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleCommentListResponse) ProtoMessage() {}

func (x *ArticleCommentListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleCommentListResponse.ProtoReflect.Descriptor instead.
func (*ArticleCommentListResponse) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{37}
}

func (x *ArticleCommentListResponse) GetComments() []*ArticleCommentList {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *ArticleCommentListResponse) GetTotalNum() int64 {
	if x != nil {
		return x.TotalNum
	}
	return 0
}

func (x *ArticleCommentListResponse) GetEndId() int64 {
	if x != nil {
		return x.EndId
	}
	return 0
}

func (x *ArticleCommentListResponse) GetLastId() int64 {
	if x != nil {
		return x.LastId
	}
	return 0
}

type ArticleUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Page    int32  `protobuf:"varint,2,opt,name=Page,proto3" json:"Page,omitempty"`
	PageNum int32  `protobuf:"varint,3,opt,name=PageNum,proto3" json:"PageNum,omitempty"`
}

func (x *ArticleUserRequest) Reset() {
	*x = ArticleUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleUserRequest) ProtoMessage() {}

func (x *ArticleUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleUserRequest.ProtoReflect.Descriptor instead.
func (*ArticleUserRequest) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{38}
}

func (x *ArticleUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ArticleUserRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ArticleUserRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

type ArticleUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Articles []*ArticleList `protobuf:"bytes,1,rep,name=articles,proto3" json:"articles,omitempty"`
}

func (x *ArticleUserResponse) Reset() {
	*x = ArticleUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleUserResponse) ProtoMessage() {}

func (x *ArticleUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleUserResponse.ProtoReflect.Descriptor instead.
func (*ArticleUserResponse) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{39}
}

func (x *ArticleUserResponse) GetArticles() []*ArticleList {
	if x != nil {
		return x.Articles
	}
	return nil
}

type ArticleSuggestSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyword string `protobuf:"bytes,1,opt,name=Keyword,proto3" json:"Keyword,omitempty"`
}

func (x *ArticleSuggestSearchRequest) Reset() {
	*x = ArticleSuggestSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleSuggestSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleSuggestSearchRequest) ProtoMessage() {}

func (x *ArticleSuggestSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleSuggestSearchRequest.ProtoReflect.Descriptor instead.
func (*ArticleSuggestSearchRequest) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{40}
}

func (x *ArticleSuggestSearchRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

type ArticleSuggestSearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Searchs []string `protobuf:"bytes,1,rep,name=searchs,proto3" json:"searchs,omitempty"`
}

func (x *ArticleSuggestSearchResponse) Reset() {
	*x = ArticleSuggestSearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleSuggestSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleSuggestSearchResponse) ProtoMessage() {}

func (x *ArticleSuggestSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleSuggestSearchResponse.ProtoReflect.Descriptor instead.
func (*ArticleSuggestSearchResponse) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{41}
}

func (x *ArticleSuggestSearchResponse) GetSearchs() []string {
	if x != nil {
		return x.Searchs
	}
	return nil
}

type ArticleUserSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyword string `protobuf:"bytes,1,opt,name=Keyword,proto3" json:"Keyword,omitempty"`
	Page    int64  `protobuf:"varint,2,opt,name=Page,proto3" json:"Page,omitempty"`
	PageNum int64  `protobuf:"varint,3,opt,name=PageNum,proto3" json:"PageNum,omitempty"`
}

func (x *ArticleUserSearchRequest) Reset() {
	*x = ArticleUserSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleUserSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleUserSearchRequest) ProtoMessage() {}

func (x *ArticleUserSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleUserSearchRequest.ProtoReflect.Descriptor instead.
func (*ArticleUserSearchRequest) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{42}
}

func (x *ArticleUserSearchRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *ArticleUserSearchRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ArticleUserSearchRequest) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

type ArticleUserSearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalNum     int64          `protobuf:"varint,1,opt,name=TotalNum,proto3" json:"TotalNum,omitempty"`
	Message      string         `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	ArticlesList []*ArticleList `protobuf:"bytes,3,rep,name=ArticlesList,proto3" json:"ArticlesList,omitempty"`
}

func (x *ArticleUserSearchResponse) Reset() {
	*x = ArticleUserSearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleUserSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleUserSearchResponse) ProtoMessage() {}

func (x *ArticleUserSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleUserSearchResponse.ProtoReflect.Descriptor instead.
func (*ArticleUserSearchResponse) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{43}
}

func (x *ArticleUserSearchResponse) GetTotalNum() int64 {
	if x != nil {
		return x.TotalNum
	}
	return 0
}

func (x *ArticleUserSearchResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ArticleUserSearchResponse) GetArticlesList() []*ArticleList {
	if x != nil {
		return x.ArticlesList
	}
	return nil
}

type ArticleLikeResponse_UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeadPhoto string `protobuf:"bytes,1,opt,name=HeadPhoto,proto3" json:"HeadPhoto,omitempty"`
	Aid       int64  `protobuf:"varint,2,opt,name=Aid,proto3" json:"Aid,omitempty"`
}

func (x *ArticleLikeResponse_UserInfo) Reset() {
	*x = ArticleLikeResponse_UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleLikeResponse_UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleLikeResponse_UserInfo) ProtoMessage() {}

func (x *ArticleLikeResponse_UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleLikeResponse_UserInfo.ProtoReflect.Descriptor instead.
func (*ArticleLikeResponse_UserInfo) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{21, 0}
}

func (x *ArticleLikeResponse_UserInfo) GetHeadPhoto() string {
	if x != nil {
		return x.HeadPhoto
	}
	return ""
}

func (x *ArticleLikeResponse_UserInfo) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

var File_channel_proto protoreflect.FileDescriptor

var file_channel_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x40, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xb5, 0x03, 0x0a, 0x0b, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x72, 0x74, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x41, 0x72, 0x74, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x41, 0x6c,
	0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x64, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x48, 0x65, 0x61, 0x64, 0x50,
	0x68, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x43, 0x6f, 0x64, 0x65, 0x59, 0x65, 0x61, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x43, 0x6f, 0x64, 0x65, 0x59, 0x65, 0x61, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x61, 0x64,
	0x4e, 0x75, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x52, 0x65, 0x61, 0x64, 0x4e,
	0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4e,
	0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x4c, 0x69, 0x6b, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x4c, 0x69, 0x6b, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x24, 0x0a, 0x0d,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x75, 0x6d, 0x22, 0xdd, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x28, 0x0a, 0x0f, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x50, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x49, 0x73, 0x54, 0x6f, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x49, 0x73, 0x54,
	0x6f, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x4c, 0x69, 0x6b, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x4c, 0x69,
	0x6b, 0x65, 0x22, 0x98, 0x02, 0x0a, 0x12, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x50, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0f, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x73, 0x54, 0x6f, 0x70, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x49, 0x73, 0x54, 0x6f, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x73,
	0x4c, 0x69, 0x6b, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x73, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x43, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x09, 0x43, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x14, 0x0a,
	0x12, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x47, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x22, 0x17, 0x0a, 0x15,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4a, 0x0a, 0x16, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x30, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x73, 0x22, 0x2c, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x47, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x08,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x22, 0x6f, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x16, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x08, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x22, 0x4f, 0x0a, 0x17, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x74,
	0x63, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x18, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61,
	0x74, 0x63, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x73, 0x22, 0x63, 0x0a, 0x15, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x50,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x4a, 0x0a, 0x16, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x08, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x73, 0x22, 0x68, 0x0a, 0x14, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x22,
	0xd9, 0x01, 0x0a, 0x15, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x66,
	0x6f, 0x63, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x49, 0x73, 0x66, 0x6f,
	0x63, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x73, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x49, 0x73, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x6c, 0x69, 0x6b,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x49, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x4c, 0x69, 0x6b, 0x65, 0x4e, 0x75, 0x6d,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x4c, 0x69, 0x6b, 0x65, 0x4e, 0x75, 0x6d, 0x12,
	0x18, 0x0a, 0x07, 0x52, 0x65, 0x61, 0x64, 0x4e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x52, 0x65, 0x61, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x41, 0x69, 0x64, 0x22, 0x4a, 0x0a, 0x12, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x27, 0x0a, 0x13, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x41, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x41, 0x69, 0x64,
	0x22, 0x32, 0x0a, 0x12, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x49, 0x64, 0x22, 0x96, 0x01, 0x0a, 0x13, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x09,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x1a, 0x3a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a,
	0x09, 0x48, 0x65, 0x61, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x48, 0x65, 0x61, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x41,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x41, 0x69, 0x64, 0x22, 0x4c, 0x0a,
	0x14, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x29, 0x0a, 0x15, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x41, 0x69, 0x64, 0x22, 0x4f, 0x0a, 0x17, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x54, 0x6f, 0x44, 0x69, 0x73, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x18, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x54, 0x6f, 0x44, 0x69, 0x73, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x41, 0x69, 0x64, 0x22, 0x1b, 0x0a, 0x19, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x1c, 0x0a, 0x1a, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x46, 0x0a, 0x1a, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x6f, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x41, 0x69, 0x64, 0x22, 0x2f, 0x0a, 0x1b, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x54, 0x6f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x41, 0x69, 0x64, 0x22, 0x49, 0x0a, 0x1d, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x54, 0x6f, 0x44, 0x69, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x41, 0x69, 0x64, 0x22, 0x20, 0x0a, 0x1e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x54,
	0x6f, 0x44, 0x69, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x64, 0x0a, 0x1c, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x50, 0x61,
	0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x51, 0x0a, 0x1d,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a,
	0x08, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x08, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x22,
	0x87, 0x01, 0x0a, 0x17, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x6f, 0x43, 0x6f, 0x6d,
	0x6d, 0x6e, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x18, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x7c, 0x0a, 0x19,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x9f, 0x01, 0x0a, 0x1a, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x08, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x12, 0x14,
	0x0a, 0x05, 0x45, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x45,
	0x6e, 0x64, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x61, 0x73, 0x74, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x4c, 0x61, 0x73, 0x74, 0x49, 0x64, 0x22, 0x5a, 0x0a, 0x12,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x47, 0x0a, 0x13, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x30, 0x0a, 0x08, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x08, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x73, 0x22, 0x37, 0x0a, 0x1b, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x75, 0x67, 0x67,
	0x65, 0x73, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x38, 0x0a, 0x1c, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x73, 0x22, 0x62, 0x0a, 0x18, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x8b, 0x01, 0x0a, 0x19, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4e,
	0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4e,
	0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x0c,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0c, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x32, 0xd6, 0x0d, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x12, 0x47, 0x0a, 0x0a, 0x41, 0x6c, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x12, 0x1b, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0e, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1e, 0x2e,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48,
	0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1b, 0x2e,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1e, 0x2e, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x61, 0x74, 0x63, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12,
	0x20, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61,
	0x74, 0x63, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x61, 0x74, 0x63, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1e, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0d, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x52, 0x65, 0x61, 0x64, 0x12, 0x1b, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x48, 0x0a, 0x0b, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x6b, 0x65,
	0x12, 0x1b, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c,
	0x69, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0d, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x1d, 0x2e, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x6f,
	0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x6f, 0x4c,
	0x69, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x6f, 0x44, 0x69, 0x73, 0x4c, 0x69, 0x6b, 0x65, 0x12,
	0x20, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x54, 0x6f, 0x44, 0x69, 0x73, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x54, 0x6f, 0x44, 0x69, 0x73, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x12, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x22, 0x2e, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x13, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x6f,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x6f, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x54, 0x6f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x16, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x54, 0x6f, 0x44, 0x69, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x26, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x54, 0x6f, 0x44, 0x69, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x6f, 0x44, 0x69, 0x73, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x66, 0x0a, 0x15, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x26, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x54, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x2e, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x6f,
	0x43, 0x6f, 0x6d, 0x6d, 0x6e, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x54, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5d, 0x0a, 0x12, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4c, 0x0a, 0x0f, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63,
	0x0a, 0x14, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x24, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x75,
	0x67, 0x67, 0x65, 0x73, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x11, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x21, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x0b, 0x5a, 0x09, 0x2e, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_channel_proto_rawDescOnce sync.Once
	file_channel_proto_rawDescData = file_channel_proto_rawDesc
)

func file_channel_proto_rawDescGZIP() []byte {
	file_channel_proto_rawDescOnce.Do(func() {
		file_channel_proto_rawDescData = protoimpl.X.CompressGZIP(file_channel_proto_rawDescData)
	})
	return file_channel_proto_rawDescData
}

var file_channel_proto_msgTypes = make([]protoimpl.MessageInfo, 45)
var file_channel_proto_goTypes = []interface{}{
	(*ChannelList)(nil),                    // 0: channel.ChannelList
	(*ArticleList)(nil),                    // 1: channel.ArticleList
	(*CommentList)(nil),                    // 2: channel.CommentList
	(*ArticleCommentList)(nil),             // 3: channel.ArticleCommentList
	(*ChannelListRequest)(nil),             // 4: channel.ChannelListRequest
	(*ChannelListResponse)(nil),            // 5: channel.ChannelListResponse
	(*DefaultChannelRequest)(nil),          // 6: channel.DefaultChannelRequest
	(*DefaultChannelResponse)(nil),         // 7: channel.DefaultChannelResponse
	(*UserChannelRequest)(nil),             // 8: channel.UserChannelRequest
	(*UserChannelResponse)(nil),            // 9: channel.UserChannelResponse
	(*UserAddChannelRequest)(nil),          // 10: channel.UserAddChannelRequest
	(*UserAddChannelResponse)(nil),         // 11: channel.UserAddChannelResponse
	(*UserPatchChannelRequest)(nil),        // 12: channel.UserPatchChannelRequest
	(*UserPatchChannelResponse)(nil),       // 13: channel.UserPatchChannelResponse
	(*ArticleChannelRequest)(nil),          // 14: channel.ArticleChannelRequest
	(*ArticleChannelResponse)(nil),         // 15: channel.ArticleChannelResponse
	(*ArticlestatusRequest)(nil),           // 16: channel.ArticlestatusRequest
	(*ArticlestatusResponse)(nil),          // 17: channel.ArticlestatusResponse
	(*ArticleReadRequest)(nil),             // 18: channel.ArticleReadRequest
	(*ArticleReadResponse)(nil),            // 19: channel.ArticleReadResponse
	(*ArticleLikeRequest)(nil),             // 20: channel.ArticleLikeRequest
	(*ArticleLikeResponse)(nil),            // 21: channel.ArticleLikeResponse
	(*ArticleToLikeRequest)(nil),           // 22: channel.ArticleToLikeRequest
	(*ArticleToLikeResponse)(nil),          // 23: channel.ArticleToLikeResponse
	(*ArticleToDisLikeRequest)(nil),        // 24: channel.ArticleToDisLikeRequest
	(*ArticleToDisLikeResponse)(nil),       // 25: channel.ArticleToDisLikeResponse
	(*ArticleStatusCacheRequest)(nil),      // 26: channel.ArticleStatusCacheRequest
	(*ArticleStatusCacheResponse)(nil),     // 27: channel.ArticleStatusCacheResponse
	(*ArticleToCollectionRequest)(nil),     // 28: channel.ArticleToCollectionRequest
	(*ArticleToCollectionResponse)(nil),    // 29: channel.ArticleToCollectionResponse
	(*ArticleToDisCollectionRequest)(nil),  // 30: channel.ArticleToDisCollectionRequest
	(*ArticleToDisCollectionResponse)(nil), // 31: channel.ArticleToDisCollectionResponse
	(*ArticleUserCollectionRequest)(nil),   // 32: channel.ArticleUserCollectionRequest
	(*ArticleUserCollectionResponse)(nil),  // 33: channel.ArticleUserCollectionResponse
	(*ArticleToCommnetRequest)(nil),        // 34: channel.ArticleToCommnetRequest
	(*ArticleToCommentResponse)(nil),       // 35: channel.ArticleToCommentResponse
	(*ArticleCommentListRequest)(nil),      // 36: channel.ArticleCommentListRequest
	(*ArticleCommentListResponse)(nil),     // 37: channel.ArticleCommentListResponse
	(*ArticleUserRequest)(nil),             // 38: channel.ArticleUserRequest
	(*ArticleUserResponse)(nil),            // 39: channel.ArticleUserResponse
	(*ArticleSuggestSearchRequest)(nil),    // 40: channel.ArticleSuggestSearchRequest
	(*ArticleSuggestSearchResponse)(nil),   // 41: channel.ArticleSuggestSearchResponse
	(*ArticleUserSearchRequest)(nil),       // 42: channel.ArticleUserSearchRequest
	(*ArticleUserSearchResponse)(nil),      // 43: channel.ArticleUserSearchResponse
	(*ArticleLikeResponse_UserInfo)(nil),   // 44: channel.ArticleLikeResponse.UserInfo
}
var file_channel_proto_depIdxs = []int32{
	2,  // 0: channel.ArticleCommentList.CComments:type_name -> channel.CommentList
	0,  // 1: channel.ChannelListResponse.channels:type_name -> channel.ChannelList
	0,  // 2: channel.DefaultChannelResponse.channels:type_name -> channel.ChannelList
	0,  // 3: channel.UserChannelResponse.channels:type_name -> channel.ChannelList
	0,  // 4: channel.UserAddChannelResponse.channels:type_name -> channel.ChannelList
	0,  // 5: channel.UserPatchChannelResponse.channels:type_name -> channel.ChannelList
	1,  // 6: channel.ArticleChannelResponse.articles:type_name -> channel.ArticleList
	44, // 7: channel.ArticleLikeResponse.UsersInfo:type_name -> channel.ArticleLikeResponse.UserInfo
	1,  // 8: channel.ArticleUserCollectionResponse.articles:type_name -> channel.ArticleList
	3,  // 9: channel.ArticleCommentListResponse.Comments:type_name -> channel.ArticleCommentList
	1,  // 10: channel.ArticleUserResponse.articles:type_name -> channel.ArticleList
	1,  // 11: channel.ArticleUserSearchResponse.ArticlesList:type_name -> channel.ArticleList
	4,  // 12: channel.Channel.AllChannel:input_type -> channel.ChannelListRequest
	6,  // 13: channel.Channel.DefaultChannel:input_type -> channel.DefaultChannelRequest
	8,  // 14: channel.Channel.UserChannel:input_type -> channel.UserChannelRequest
	10, // 15: channel.Channel.UserAddChannel:input_type -> channel.UserAddChannelRequest
	12, // 16: channel.Channel.UserPatchChannel:input_type -> channel.UserPatchChannelRequest
	14, // 17: channel.Channel.ArticleChannel:input_type -> channel.ArticleChannelRequest
	16, // 18: channel.Channel.ArticleStatus:input_type -> channel.ArticlestatusRequest
	18, // 19: channel.Channel.ArticleRead:input_type -> channel.ArticleReadRequest
	20, // 20: channel.Channel.ArticleLike:input_type -> channel.ArticleLikeRequest
	22, // 21: channel.Channel.ArticleToLike:input_type -> channel.ArticleToLikeRequest
	24, // 22: channel.Channel.ArticleToDisLike:input_type -> channel.ArticleToDisLikeRequest
	26, // 23: channel.Channel.ArticleStatusCache:input_type -> channel.ArticleStatusCacheRequest
	28, // 24: channel.Channel.ArticleToCollection:input_type -> channel.ArticleToCollectionRequest
	30, // 25: channel.Channel.ArticleToDisCollection:input_type -> channel.ArticleToDisCollectionRequest
	32, // 26: channel.Channel.ArticleUserCollection:input_type -> channel.ArticleUserCollectionRequest
	34, // 27: channel.Channel.ArticleToComment:input_type -> channel.ArticleToCommnetRequest
	36, // 28: channel.Channel.ArticleCommentList:input_type -> channel.ArticleCommentListRequest
	38, // 29: channel.Channel.ArticleUserList:input_type -> channel.ArticleUserRequest
	40, // 30: channel.Channel.ArticleSuggestSearch:input_type -> channel.ArticleSuggestSearchRequest
	42, // 31: channel.Channel.ArticleUserSearch:input_type -> channel.ArticleUserSearchRequest
	5,  // 32: channel.Channel.AllChannel:output_type -> channel.ChannelListResponse
	7,  // 33: channel.Channel.DefaultChannel:output_type -> channel.DefaultChannelResponse
	9,  // 34: channel.Channel.UserChannel:output_type -> channel.UserChannelResponse
	11, // 35: channel.Channel.UserAddChannel:output_type -> channel.UserAddChannelResponse
	13, // 36: channel.Channel.UserPatchChannel:output_type -> channel.UserPatchChannelResponse
	15, // 37: channel.Channel.ArticleChannel:output_type -> channel.ArticleChannelResponse
	17, // 38: channel.Channel.ArticleStatus:output_type -> channel.ArticlestatusResponse
	19, // 39: channel.Channel.ArticleRead:output_type -> channel.ArticleReadResponse
	21, // 40: channel.Channel.ArticleLike:output_type -> channel.ArticleLikeResponse
	23, // 41: channel.Channel.ArticleToLike:output_type -> channel.ArticleToLikeResponse
	25, // 42: channel.Channel.ArticleToDisLike:output_type -> channel.ArticleToDisLikeResponse
	27, // 43: channel.Channel.ArticleStatusCache:output_type -> channel.ArticleStatusCacheResponse
	29, // 44: channel.Channel.ArticleToCollection:output_type -> channel.ArticleToCollectionResponse
	31, // 45: channel.Channel.ArticleToDisCollection:output_type -> channel.ArticleToDisCollectionResponse
	33, // 46: channel.Channel.ArticleUserCollection:output_type -> channel.ArticleUserCollectionResponse
	35, // 47: channel.Channel.ArticleToComment:output_type -> channel.ArticleToCommentResponse
	37, // 48: channel.Channel.ArticleCommentList:output_type -> channel.ArticleCommentListResponse
	39, // 49: channel.Channel.ArticleUserList:output_type -> channel.ArticleUserResponse
	41, // 50: channel.Channel.ArticleSuggestSearch:output_type -> channel.ArticleSuggestSearchResponse
	43, // 51: channel.Channel.ArticleUserSearch:output_type -> channel.ArticleUserSearchResponse
	32, // [32:52] is the sub-list for method output_type
	12, // [12:32] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_channel_proto_init() }
func file_channel_proto_init() {
	if File_channel_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_channel_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleCommentList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DefaultChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DefaultChannelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserChannelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAddChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAddChannelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPatchChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPatchChannelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleChannelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticlestatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticlestatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleReadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleReadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleLikeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleLikeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleToLikeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleToLikeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleToDisLikeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleToDisLikeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleStatusCacheRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleStatusCacheResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleToCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleToCollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleToDisCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleToDisCollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleUserCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleUserCollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleToCommnetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleToCommentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleCommentListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleCommentListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleSuggestSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleSuggestSearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleUserSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleUserSearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleLikeResponse_UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_channel_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   45,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_channel_proto_goTypes,
		DependencyIndexes: file_channel_proto_depIdxs,
		MessageInfos:      file_channel_proto_msgTypes,
	}.Build()
	File_channel_proto = out.File
	file_channel_proto_rawDesc = nil
	file_channel_proto_goTypes = nil
	file_channel_proto_depIdxs = nil
}
