// Code generated by goctl. DO NOT EDIT.
// Source: product.proto

package productclient

import (
	"context"

	"liujun/Time_go-zero_csdn/csdn/shop_product/cmd/rpc/types/product"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddCartRequest          = product.AddCartRequest
	AddCartResponse         = product.AddCartResponse
	CategoryList            = product.CategoryList
	GetCartRequest          = product.GetCartRequest
	GetCartResponse         = product.GetCartResponse
	ProductCategoryRequest  = product.ProductCategoryRequest
	ProductCategoryResponse = product.ProductCategoryResponse
	ProductDescRequest      = product.ProductDescRequest
	ProductDescResponse     = product.ProductDescResponse
	ProductSpuList          = product.ProductSpuList
	ProductSpuListRequest   = product.ProductSpuListRequest
	ProductSpuListResponse  = product.ProductSpuListResponse
	SkuSpec                 = product.SkuSpec
	SpecList                = product.SpecList
	Specs                   = product.Specs
	SpuDesc                 = product.SpuDesc
	SubCategory             = product.SubCategory

	Product interface {
		ProductSpuList(ctx context.Context, in *ProductSpuListRequest, opts ...grpc.CallOption) (*ProductSpuListResponse, error)
		ProductCategory(ctx context.Context, in *ProductCategoryRequest, opts ...grpc.CallOption) (*ProductCategoryResponse, error)
		ProductDesc(ctx context.Context, in *ProductDescRequest, opts ...grpc.CallOption) (*ProductDescResponse, error)
		AddCart(ctx context.Context, in *AddCartRequest, opts ...grpc.CallOption) (*AddCartResponse, error)
		GetCart(ctx context.Context, in *GetCartRequest, opts ...grpc.CallOption) (*GetCartResponse, error)
	}

	defaultProduct struct {
		cli zrpc.Client
	}
)

func NewProduct(cli zrpc.Client) Product {
	return &defaultProduct{
		cli: cli,
	}
}

func (m *defaultProduct) ProductSpuList(ctx context.Context, in *ProductSpuListRequest, opts ...grpc.CallOption) (*ProductSpuListResponse, error) {
	client := product.NewProductClient(m.cli.Conn())
	return client.ProductSpuList(ctx, in, opts...)
}

func (m *defaultProduct) ProductCategory(ctx context.Context, in *ProductCategoryRequest, opts ...grpc.CallOption) (*ProductCategoryResponse, error) {
	client := product.NewProductClient(m.cli.Conn())
	return client.ProductCategory(ctx, in, opts...)
}

func (m *defaultProduct) ProductDesc(ctx context.Context, in *ProductDescRequest, opts ...grpc.CallOption) (*ProductDescResponse, error) {
	client := product.NewProductClient(m.cli.Conn())
	return client.ProductDesc(ctx, in, opts...)
}

func (m *defaultProduct) AddCart(ctx context.Context, in *AddCartRequest, opts ...grpc.CallOption) (*AddCartResponse, error) {
	client := product.NewProductClient(m.cli.Conn())
	return client.AddCart(ctx, in, opts...)
}

func (m *defaultProduct) GetCart(ctx context.Context, in *GetCartRequest, opts ...grpc.CallOption) (*GetCartResponse, error) {
	client := product.NewProductClient(m.cli.Conn())
	return client.GetCart(ctx, in, opts...)
}
