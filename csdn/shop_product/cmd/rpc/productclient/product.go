// Code generated by goctl. DO NOT EDIT.
// Source: product.proto

package productclient

import (
	"context"

	"liujun/Time_go-zero_csdn/csdn/shop_product/cmd/rpc/types/product"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CategoryList            = product.CategoryList
	ProductCategoryRequest  = product.ProductCategoryRequest
	ProductCategoryResponse = product.ProductCategoryResponse
	ProductSpuList          = product.ProductSpuList
	ProductSpuListRequest   = product.ProductSpuListRequest
	ProductSpuListResponse  = product.ProductSpuListResponse
	SubCategory             = product.SubCategory

	Product interface {
		ProductSpuList(ctx context.Context, in *ProductSpuListRequest, opts ...grpc.CallOption) (*ProductSpuListResponse, error)
		ProductCategory(ctx context.Context, in *ProductCategoryRequest, opts ...grpc.CallOption) (*ProductCategoryResponse, error)
	}

	defaultProduct struct {
		cli zrpc.Client
	}
)

func NewProduct(cli zrpc.Client) Product {
	return &defaultProduct{
		cli: cli,
	}
}

func (m *defaultProduct) ProductSpuList(ctx context.Context, in *ProductSpuListRequest, opts ...grpc.CallOption) (*ProductSpuListResponse, error) {
	client := product.NewProductClient(m.cli.Conn())
	return client.ProductSpuList(ctx, in, opts...)
}

func (m *defaultProduct) ProductCategory(ctx context.Context, in *ProductCategoryRequest, opts ...grpc.CallOption) (*ProductCategoryResponse, error) {
	client := product.NewProductClient(m.cli.Conn())
	return client.ProductCategory(ctx, in, opts...)
}
